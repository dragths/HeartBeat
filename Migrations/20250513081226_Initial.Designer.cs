// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using tinder_1.DataBase;

#nullable disable

namespace tinder_1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250513081226_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("tinder_1.Models.BadHabitsAttitude", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BadHabitsAttitudes", "public");
                });

            modelBuilder.Entity("tinder_1.Models.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cities", "public");
                });

            modelBuilder.Entity("tinder_1.Models.Favorites", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("FavoriteUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Favorites", "public");
                });

            modelBuilder.Entity("tinder_1.Models.FilmGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FilmGenres", "public");
                });

            modelBuilder.Entity("tinder_1.Models.Gender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Genders", "public");
                });

            modelBuilder.Entity("tinder_1.Models.Hobby", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Hobbies", "public");
                });

            modelBuilder.Entity("tinder_1.Models.MusicGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MusicGenres", "public");
                });

            modelBuilder.Entity("tinder_1.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users", "public");
                });

            modelBuilder.Entity("tinder_1.Models.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AboutMe")
                        .HasColumnType("text");

                    b.Property<Guid?>("BadHabitsAttitudeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("FilmGenreId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("GenderId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("HobbyId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MusicGenreId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("BadHabitsAttitudeId");

                    b.HasIndex("CityId");

                    b.HasIndex("FilmGenreId");

                    b.HasIndex("GenderId");

                    b.HasIndex("HobbyId");

                    b.HasIndex("MusicGenreId");

                    b.HasIndex("UserId");

                    b.ToTable("UserProfiles", "public");
                });

            modelBuilder.Entity("tinder_1.Models.UserProfile", b =>
                {
                    b.HasOne("tinder_1.Models.BadHabitsAttitude", "BadHabitsAttitude")
                        .WithMany()
                        .HasForeignKey("BadHabitsAttitudeId");

                    b.HasOne("tinder_1.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("tinder_1.Models.FilmGenre", "FilmGenre")
                        .WithMany()
                        .HasForeignKey("FilmGenreId");

                    b.HasOne("tinder_1.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("tinder_1.Models.Hobby", "Hobby")
                        .WithMany()
                        .HasForeignKey("HobbyId");

                    b.HasOne("tinder_1.Models.MusicGenre", "MusicGenre")
                        .WithMany()
                        .HasForeignKey("MusicGenreId");

                    b.HasOne("tinder_1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BadHabitsAttitude");

                    b.Navigation("City");

                    b.Navigation("FilmGenre");

                    b.Navigation("Gender");

                    b.Navigation("Hobby");

                    b.Navigation("MusicGenre");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
